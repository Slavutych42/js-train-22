// Одиночка (Singleton) — це патерн програмування, який забезпечує,
// що клас має тільки один екземпляр і надає глобальну точку доступу до цього екземпляра.

// Клас OrderTracker відповідає за відстеження замовлень
class OrderTracker {
  // Приватне статичне instance поле для збереження єдиного екземпляра класу початкове значення null
  // Приватне статичне orders поле для збереження списку замовлень початкове значення []
  /**
   * Статичний метод create використовується для створення єдиного екземпляра класу
   */
  // Перевіряємо, чи є вже створений екземпляр класу
  // Якщо немає, створюємо новий екземпляр
  // Інакше повертаємо єдиний екземпляр класу
  /**
   * Статичний метод add використовується для додавання замовлення до списку
   * Отримує item та додає його до масиву замовлень
   */
  /**
   * Статичний метод get використовується для отримання списку замовлень
   */

   #orders = [];

   constructor() {}

    static getInstance() {
      if (!this.instance) {
        this.instance = new OrderTracker();
      }
      return this.instance;
    }

    add(item) {
      this.#orders.push(item);
    }

    get() {
      return this.#orders;
    }
}


console.log("Завдання 1 ====================================");
// Після виконання розкоментуйте код нижче

const tracker = OrderTracker.getInstance();

// Додаємо замовлення до списку
tracker.add("Телефон");
tracker.add("Ноутбук");

// Отримуємо список замовлень
const orders = tracker.get();

// Виводимо список замовлень в консоль
console.log(orders);